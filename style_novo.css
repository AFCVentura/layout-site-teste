@import "config.css";

/* A versão "original" (sem media-query) do CSS é a pensada para celular, isso se chama mobile first */
.container {
    display: grid;
    grid-template-columns: 1fr;
    grid-template-rows: 30rem 30rem 30rem 1fr 30rem;
    gap: 1rem;
    min-height: 100vh;
}
.container > * {
    grid-column: 1 / -1;
}
.header {
    grid-row: 1 / 2;
}
.aside {
    grid-row: 2 / 3;
}
.section {
    grid-row: 3 / 4;
}
.main {
    /* Grid externa */
    grid-row: 4 / -2;

    /* Grid interna */
    display: grid;
    grid-template-columns: 1fr;
    grid-auto-rows: 25rem;
    gap: 1rem;
}
.footer {
    grid-row: -2 / -1;
}

/* Versão para tablets ou celulares muito grandes */
@media only screen and (min-width: 768px) {
    .container {
        grid-template-columns: 20rem 1fr;
        grid-template-rows: 25rem 30rem 30rem 1fr 30rem;
    }
    .header {
        grid-column: 1 / -1;
        grid-row: 1 / 2;
    }
    .aside {
        grid-column: 1 / 2;
        grid-row: 2 / -2;
    }
    .section {
        grid-column: 2 / -1;
        grid-row: 2 / 3;
    }
    .main {
        grid-row: 3 / -2;
        grid-column: 2 / -1;
        grid-template-columns: 1fr;
    }
    .footer {
        grid-column: 1 / -1;
        grid-row: -2 / -1;
    }
}

/* Versão para tablets no modo paisagem ou monitores bem pequenos */
@media only screen and (min-width: 992px) {
    .container {
        grid-template-columns: 25rem 1fr;
        grid-template-rows: 25rem 30rem 1fr 30rem;
    }
    .header {
        grid-column: 1 / -1;
        grid-row: 1 / 2;
    }
    .aside {
        grid-column: 1 / 2;
        grid-row: 2 / -2;
    }
    .section {
        grid-column: 2 / -1;
        grid-row: 2 / 3;
    }
    .main {
        grid-row: 3 / -2;
        grid-column: 2 / -1;
        grid-template-columns: 1fr 1fr;
    }
    .footer {
        grid-column: 1 / -1;
        grid-row: -2 / -1;
    }
}

/* Versão para monitores comuns e notebooks/laptops pra cima (incluindo monitores grandes, ultrawide e tvs */
@media only screen and (min-width: 1200px) {
    .container {
        grid-template-columns: 30rem 1fr;
        grid-template-rows: 25rem 30rem 1fr 30rem;
    }
    .header {
        grid-column: 1 / -1;
        grid-row: 1 / 2;
    }
    .aside {
        grid-column: 1 / 2;
        grid-row: 2 / -2;
    }
    .section {
        grid-column: 2 / -1;
        grid-row: 2 / 3;
    }
    .main {
        grid-column: 2 / -1;
        grid-row: 3 / -2;
        grid-template-columns: 1fr 1fr 1fr;
    }
    .footer {
        grid-column: 1 / -1;
        grid-row: -2 / -1;
    }
}
